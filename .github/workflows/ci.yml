name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      app_name:
        description: 'Choose the application to run (leave blank to run all)'
        required: false
        default: 'hello-world'
        type: choice
        options:
          - hello-world
          - api_faas

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Determine Event Type
        id: event_type
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "event_type=push" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "event_type=workflow_dispatch" >> $GITHUB_ENV
          fi
      - name: Get Changed Files
        id: changes
        run: |
          # Obtener archivos que han cambiado en la última confirmación
          echo "changed_files=$(git diff --name-only HEAD^ HEAD)" >> $GITHUB_ENV

      - name: Determine Application to Run
        id: app_to_run
        run: |
          if echo "${{ env.changed_files }}" | grep -q "hello-world"; then
            echo "app_to_run=hello-world" >> $GITHUB_ENV
          elif echo "${{ env.changed_files }}" | grep -q "api_faas"; then
            echo "app_to_run=api_faas" >> $GITHUB_ENV
          else
            echo "No relevant application changes found."
            exit 0 # Salir sin hacer nada si no se han encontrado cambios relevantes
          fi
      - name: Check which application will run
        run: |
          echo "Check which application will run: ${{ env.app_to_run }}"
      - name: Build and Run Applications
        run: |
          # Definir las aplicaciones iniciales
          apps=("hello-world" "api_faas")

          # Obtener el tipo de evento
          event_type="${{ github.event_name }}"

          if [ "$event_type" == "push" ]; then
            echo "Running all applications because of a push event..."
            
            # Obtener las aplicaciones en el directorio src/
            apps=($(ls src/))
            echo "Subdirectorios: ${apps[@]}"

            # Filtrar las aplicaciones que están en los inputs y en el listado de subdirectorios
            filtered_apps=()
            input_apps=(${GITHUB_EVENT_INPUTS_APP_NAME})  # Divide en un array usando espacios como delimitador

            for input_app in "${input_apps[@]}"; do
              if [[ " ${apps[@]} " =~ " ${input_app} " ]]; then
                filtered_apps+=("$input_app")
              else
                echo "Warning: La aplicación especificada '${input_app}' no se encuentra en el directorio src/."
              fi
            done

            # Comprobar si no hay aplicaciones filtradas
            if [ ${#filtered_apps[@]} -eq 0 ]; then
              echo "Error: No hay aplicaciones válidas para ejecutar."
              exit 1
            fi

            # Verificamos si app_to_run está vacío. Si lo está hay que ejecutar todas
            if [ -z "${{ env.app_to_run }}" ]; then
              echo "No relevant changes detected. Running all applications..."
              echo "Aplicaciones a ejecutar: ${filtered_apps[@]}"
              for app in "${filtered_apps[@]}"; do
                echo "Building and running $app..."
                echo "tener los comandos para compilar y ejecutar la app: $app"
              done
            else
              echo "Relevant changes detected. Running only the specified application: ${{ env.app_to_run }}"
              if [[ " ${filtered_apps[@]} " =~ " ${{ env.app_to_run }} " ]]; then
                echo "Building and running only the selected application: ${{ env.app_to_run }}"
                echo "Tener los comandos para compilar y ejecutar solo la app seleccionada : ${{ env.app_to_run }}"
              else
                echo "Error: La aplicación '${{ env.app_to_run }}' no es válida."
                exit 1
              fi
            fi

          elif [ "$event_type" == "workflow_dispatch" ]; then
            echo "Running selected application: ${{ github.event.inputs.app_name }}"
            if [ -z "${{ github.event.inputs.app_name }}" ]; then
              echo "No application selected. Running all applications..."
              for app in "${apps[@]}"; do
                echo "Building and running $app..."
                echo "Tener los comandos para compilar y ejecutar la app: $app"
              done
            else
              echo "Building and running only the selected application: ${{ github.event.inputs.app_name }}"
              # Aquí deberías añadir tus comandos para compilar y ejecutar solo la app seleccionada
            fi
          fi
